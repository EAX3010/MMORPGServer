using MMORPGServer.Common.ValueObjects;
using MMORPGServer.Entities;
using MMORPGServer.Persistence.Models;

namespace MMORPGServer.Persistence.Mappings
{
    /// <summary>
    /// Maps between Player (runtime) and PlayerEntity (database) models.
    /// </summary>
    public static class PlayerMapper
    {
        /// <summary>
        /// Creates a new runtime Player from a database PlayerEntity.
        /// Used when player logs in.
        /// </summary>
        public static Player ToGameObject(this PlayerEntity entity)
        {
            var player = new Player(entity.Id, 0)
            {
                // Basic info
                Name = entity.Name,
                Level = entity.Level,
                Experience = entity.Experience,
                Gold = entity.Gold,
                ConquerPoints = entity.ConquerPoints,
                BoundConquerPoints = entity.BoundConquerPoints,

                // Position
                Position = new Position(entity.X, entity.Y),
                MapId = entity.MapId,

                // Stats
                MaxHealth = entity.MaxHealth,
                CurrentHealth = entity.CurrentHealth,
                MaxMana = entity.MaxMana,
                CurrentMana = entity.CurrentMana,
                Strength = entity.Strength,
                Agility = entity.Agility,
                Vitality = entity.Vitality,
                Spirit = entity.Spirit,

                // Set clean state

                LastLogin = DateTime.UtcNow,
                IsDirty = false
            };

            return player;
        }

        /// <summary>
        /// Creates a new PlayerEntity for a brand new player.
        /// Used during character creation.
        /// </summary>
        public static PlayerEntity ToDatabaseObject(this Player player)
        {
            return new PlayerEntity
            {
                // Note: Id is auto-generated by database
                Name = player.Name,
                Level = player.Level,
                Experience = player.Experience,
                Gold = player.Gold,
                ConquerPoints = player.ConquerPoints,
                BoundConquerPoints = player.BoundConquerPoints,

                // Position
                X = player.Position.X,
                Y = player.Position.Y,
                MapId = player.MapId,

                // Stats
                MaxHealth = player.MaxHealth,
                CurrentHealth = player.CurrentHealth,
                MaxMana = player.MaxMana,
                CurrentMana = player.CurrentMana,
                Strength = player.Strength,
                Agility = player.Agility,
                Vitality = player.Vitality,
                Spirit = player.Spirit,

                // Timestamps
                LastLogin = player.LastLogin,
                LastLogout = DateTime.UtcNow
            };
        }
    }
}